T.cache("X.Graphics","K",function(f){f=K.entity(f.pkg);f.Graphics={Line:K.clazz({ctor:function(a,b){var c=this;c.startPoint=a;c.endPoint=b}}),Rect:K.clazz({ctor:function(a,b,c,d){var e=this;e.x=a;e.y=b;e.width=c;e.height=d}}),Point:K.clazz({ctor:function(a,b){var c=this;c.x=a;c.y=b},equal:function(a){var b=this;return b.x==a.x&&b.y==a.y}}),Circle:K.clazz({ctor:function(a,b){a=this;a.center=a.centerPoint;a.raduis=b}})};var g=f.Graphics;K.mix(g.Line,{isCross:function(a,b){var c=a.startPoint;a=a.endPoint;
var d=b.startPoint,e=b.endPoint;b=((a.x-c.x)*(d.y-c.y)-(a.y-c.y)*(d.x-c.x))*((a.x-c.x)*(e.y-c.y)-(a.y-c.y)*(e.x-c.x));c=((e.x-d.x)*(c.y-d.y)-(e.y-d.y)*(c.x-d.x))*((e.x-d.x)*(a.y-d.y)-(e.y-d.y)*(a.x-d.x));return b<=0&&c<=0}});K.mix(g.Circle,{isPointIn:function(a,b){var c=this;a=c.pointPosInfo(a,b);return a.inCircle},pointPosInfo:function(a,b){var c=b.center;b=b.raduis;var d=Math.sqrt(Math.pow(Math.abs(a.x-c.x),2)+Math.pow(Math.abs(a.y-c.y),2));if(d<=b)return{inCircle:true,point:a};else{a=b/d*(a.x-
c.x)+c.x;return{inCircle:false,point:new g.Point(a,ty)}}}});K.mix(g.Rect,{intersect:function(a,b){var c=a.width/2,d=a.height/2,e=b.width/2,h=b.height/2;a={x:a.x+c,y:a.y+d};b={x:b.x+e,y:b.y+h};return Math.abs(b.x-a.x)<=c+e&&Math.abs(b.y-a.y)<=d+h}})});
